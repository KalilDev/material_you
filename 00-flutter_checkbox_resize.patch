diff --git a/packages/flutter/lib/src/material/checkbox.dart b/packages/flutter/lib/src/material/checkbox.dart
index d209dc1b1a..055974874e 100644
--- a/packages/flutter/lib/src/material/checkbox.dart
+++ b/packages/flutter/lib/src/material/checkbox.dart
@@ -307,7 +307,7 @@ class Checkbox extends StatefulWidget {
   final BorderSide? side;
 
   /// The width of a checkbox widget.
-  static const double width = 18.0;
+  static const double width = 20.0;
 
   @override
   State<Checkbox> createState() => _CheckboxState();
@@ -569,14 +569,19 @@ class _CheckboxPainter extends ToggleablePainter {
     }
   }
 
+  static const double _kInnerEdgeSize = 16;
+  static const double _kInnerEdgeDelta = (_kEdgeSize-_kInnerEdgeSize)/2;
+  static const Offset _kInnerEdgeDt = Offset(_kInnerEdgeDelta,_kInnerEdgeDelta);
+
   void _drawCheck(Canvas canvas, Offset origin, double t, Paint paint) {
     assert(t >= 0.0 && t <= 1.0);
+    origin+=_kInnerEdgeDt;
     // As t goes from 0.0 to 1.0, animate the two check mark strokes from the
     // short side to the long side.
     final Path path = Path();
-    const Offset start = Offset(_kEdgeSize * 0.15, _kEdgeSize * 0.45);
-    const Offset mid = Offset(_kEdgeSize * 0.4, _kEdgeSize * 0.7);
-    const Offset end = Offset(_kEdgeSize * 0.85, _kEdgeSize * 0.25);
+    const Offset start = Offset(_kInnerEdgeSize * 0.15, _kInnerEdgeSize * 0.45);
+    const Offset mid = Offset(_kInnerEdgeSize * 0.4, _kInnerEdgeSize * 0.7);
+    const Offset end = Offset(_kInnerEdgeSize * 0.85, _kInnerEdgeSize * 0.25);
     if (t < 0.5) {
       final double strokeT = t * 2.0;
       final Offset drawMid = Offset.lerp(start, mid, strokeT)!;
@@ -594,11 +599,12 @@ class _CheckboxPainter extends ToggleablePainter {
 
   void _drawDash(Canvas canvas, Offset origin, double t, Paint paint) {
     assert(t >= 0.0 && t <= 1.0);
+    origin+=_kInnerEdgeDt;
     // As t goes from 0.0 to 1.0, animate the horizontal line from the
     // mid point outwards.
-    const Offset start = Offset(_kEdgeSize * 0.2, _kEdgeSize * 0.5);
-    const Offset mid = Offset(_kEdgeSize * 0.5, _kEdgeSize * 0.5);
-    const Offset end = Offset(_kEdgeSize * 0.8, _kEdgeSize * 0.5);
+    const Offset start = Offset(_kInnerEdgeSize * 0.2, _kInnerEdgeSize * 0.5);
+    const Offset mid = Offset(_kInnerEdgeSize * 0.5, _kInnerEdgeSize * 0.5);
+    const Offset end = Offset(_kInnerEdgeSize * 0.8, _kInnerEdgeSize * 0.5);
     final Offset drawStart = Offset.lerp(start, mid, 1.0 - t)!;
     final Offset drawEnd = Offset.lerp(mid, end, t)!;
     canvas.drawLine(origin + drawStart, origin + drawEnd, paint);
